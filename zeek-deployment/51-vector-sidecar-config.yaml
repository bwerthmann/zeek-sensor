apiVersion: v1
kind: ConfigMap
metadata:
  name: vectorconfig
  namespace: zeek
data:
  vector.yaml: |
    data_dir: /var/lib/vector
    sources:
      zeek_logs:
        type: file
        include:
          - /usr/local/zeek/logs/*.log
    transforms:
      remap_zeek:
        inputs: [zeek_logs]
        type: remap
        reroute_dropped: true
        source: |
          zeekjson, err = parse_json(.message)
          if err != null {
            log("Unable to parse JSON: " + err, level: "error")
          }
          .zeek = zeekjson
          del(.message)
          node_name, err = get_env_var("K8S_NODE_NAME")
          if err != null {
            log("Unable to set K8S_NODE_NAME: " + err, level: "error")
          }
          .k8s.node.name = node_name
          pod_name, err = get_env_var("K8S_POD_NAME")
          if err != null {
            log("Unable to set K8S_POD_NAME: " + err, level: "error")
          }
          .k8s.pod.name = pod_name
          pod_namespace, err = get_env_var("K8S_POD_NAMESPACE")
          if err != null {
            log("Unable to set K8S_POD_NAMESPACE: " + err, level: "error")
          }
          .k8s.pod.namespace = pod_namespace
          pod_ip, err = get_env_var("K8S_POD_IP")
          if err != null {
            log("Unable to set K8S_POD_IP: " + err, level: "error")
          }
          .k8s.pod.ip = pod_ip
    sinks:
      stdout:
        type: console
        inputs: [remap_zeek]
        encoding:
          codec: json
