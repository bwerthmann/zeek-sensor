apiVersion: v1
kind: Pod
metadata:
  name: sensor
  namespace: zeek
spec:
  containers:
    - name: sensor
      image: zeek/zeek:5.1.2
      command:
        - /usr/local/zeek/bin/zeek
      args:
        - -C
        - -i
        - eth0
        - LogAscii::use_json=T
      workingDir: /usr/local/zeek/logs
      volumeMounts:
        - mountPath: /usr/local/zeek/logs
          name: zeeklogs
    - name: exporter
      image: timberio/vector:0.27.X-distroless-libc
      args:
        - --watch-config
        - --config-yaml
        - /etc/vector/vector.yaml
      env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      volumeMounts:
        - mountPath: /usr/local/zeek/logs
          name: zeeklogs
          readOnly: true
        - name: vectorstate
          mountPath: /var/lib/vector
        - name: vectorcfg
          mountPath: /etc/vector
  volumes:
    - name: zeeklogs
      emptyDir: {}
    - name: vectorstate
      emptyDir: {}
    - name: vectorcfg
      projected:
        sources:
          - configMap:
              name: vectorconfig
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vectorconfig
  namespace: zeek
data:
  vector.yaml: |
    data_dir: /var/lib/vector
    sources:
      zeek_logs:
        type: file
        include:
          - /usr/local/zeek/logs/*.log
    transforms:
      remap_zeek:
        inputs: [zeek_logs]
        type: remap
        reroute_dropped: true
        source: |
          zeekjson, err = parse_json(.message)
          if err != null {
            log("Unable to parse JSON: " + err, level: "error")
          }
          .zeek = zeekjson
          del(.message)
          node_name, err = get_env_var("K8S_NODE_NAME")
          if err != null {
            log("Unable to set K8S_NODE_NAME: " + err, level: "error")
          }
          .k8s.node.name = node_name
          pod_name, err = get_env_var("K8S_POD_NAME")
          if err != null {
            log("Unable to set K8S_POD_NAME: " + err, level: "error")
          }
          .k8s.pod.name = pod_name
          pod_namespace, err = get_env_var("K8S_POD_NAMESPACE")
          if err != null {
            log("Unable to set K8S_POD_NAMESPACE: " + err, level: "error")
          }
          .k8s.pod.namespace = pod_namespace
          pod_ip, err = get_env_var("K8S_POD_IP")
          if err != null {
            log("Unable to set K8S_POD_IP: " + err, level: "error")
          }
          .k8s.pod.ip = pod_ip
    sinks:
      stdout:
        type: console
        inputs: [remap_zeek]
        encoding:
          codec: json
